(program (exp let (decs (dec (vardec var N := (exp 8))) (dec type intArray = (ty array of (type_id int))) (dec (vardec var row := (exp (type_id intArray) [ (exp (lvalue N)) ] of (exp 0)))) (dec (vardec var col := (exp (type_id intArray) [ (exp (lvalue N)) ] of (exp 0)))) (dec (vardec var diag1 := (exp (type_id intArray) [ (exp (exp (exp (lvalue N)) + (exp (lvalue N))) - (exp 1)) ] of (exp 0)))) (dec (vardec var diag2 := (exp (type_id intArray) [ (exp (exp (exp (lvalue N)) + (exp (lvalue N))) - (exp 1)) ] of (exp 0)))) (dec function printboard ( ) = (exp ( (exps (exp for i := (exp 0) to (exp (exp (lvalue N)) - (exp 1)) do (exp ( (exps (exp for j := (exp 0) to (exp (exp (lvalue N)) - (exp 1)) do (exp print ( (exp if  (exp (exp (lvalue (lvalue col) [ (exp (lvalue i)) ])) = (exp (lvalue j))) then (exp " O") else (exp " .")) ))) ; (exp print ( (exp "\n") ))) ))) ; (exp print ( (exp "\n") ))) ))) (dec function try ( (tyfields c : (type_id int)) ) = (exp ( (exps (exp if  (exp (exp (lvalue c)) = (exp (lvalue N))) then (exp printboard ( )) else (exp for r := (exp 0) to (exp (exp (lvalue N)) - (exp 1)) do (exp if  (exp (exp (exp (exp (lvalue (lvalue row) [ (exp (lvalue r)) ])) = (exp 0)) & (exp (exp (lvalue (lvalue diag1) [ (exp (exp (lvalue r)) + (exp (lvalue c))) ])) = (exp 0))) & (exp (exp (lvalue (lvalue diag2) [ (exp (exp (exp (lvalue r)) + (exp 7)) - (exp (lvalue c))) ])) = (exp 0))) then (exp ( (exps (exp (lvalue (lvalue row) [ (exp (lvalue r)) ]) := (exp 1)) ; (exp (lvalue (lvalue diag1) [ (exp (exp (lvalue r)) + (exp (lvalue c))) ]) := (exp 1)) ; (exp (lvalue (lvalue diag2) [ (exp (exp (exp (lvalue r)) + (exp 7)) - (exp (lvalue c))) ]) := (exp 1)) ; (exp (lvalue (lvalue col) [ (exp (lvalue c)) ]) := (exp (lvalue r))) ; (exp try ( (exp (exp (lvalue c)) + (exp 1)) )) ; (exp (lvalue (lvalue row) [ (exp (lvalue r)) ]) := (exp 0)) ; (exp (lvalue (lvalue diag1) [ (exp (exp (lvalue r)) + (exp (lvalue c))) ]) := (exp 0)) ; (exp (lvalue (lvalue diag2) [ (exp (exp (exp (lvalue r)) + (exp 7)) - (exp (lvalue c))) ]) := (exp 0))) )))))) )))) in (exps (exp try ( (exp 0) ))) end))
