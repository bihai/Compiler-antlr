# This viminfo file was generated by Vim 7.3.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Substitute String:
$

# Command Line History (newest to oldest):
:q
:w

# Search String History (newest to oldest):
? \s\+$

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Input Line History (newest to oldest):

# Registers:
""1	LINE	0
	"r
	"{{{Misc Settings
	
	" Necesary  for lots of cool vim things
	set nocompatible
	
	" This shows what you are typing as a command.  I love this!
	set showcmd
	
	" Folding Stuffs
	set foldmethod=marker
	
	" Needed for Syntax Highlighting and stuff
	filetype on
	filetype plugin on
	syntax enable
	set grepprg=grep\ -nH\ $*
	
	" Who doesn't like autoindent?
	set autoindent
	
	" Spaces are better than a tab character
	set expandtab
	set smarttab
	
	" Who wants an 8 character tab?  Not me!
	set shiftwidth=3
	set softtabstop=3
	
	" Use english for spellchecking, but don't spellcheck by default
	if version >= 700
	   set spl=en spell
	   set nospell
	endif
	
	" Real men use gcc
	"compiler gcc
	
	" Cool tab completion stuff
	set wildmenu
	set wildmode=list:longest,full
	
	" Enable mouse support in console
	set mouse=a
	
	" Got backspace?
	set backspace=2
	
	" Line Numbers PWN!
	set number
"2	LINE	0
	"p
"3	LINE	0
	
"4	LINE	0
	"{{{Auto Commands
	
	" Automatically cd into the directory that the file is in
	autocmd BufEnter * execute "chdir ".escape(expand("%:p:h"), ' ')
	
	" Remove any trailing whitespace that is in the file
	autocmd BufRead,BufWrite * if ! &bin | silent! %s/\s\+$//ge | endif
	
	" Restore cursor position to where it was before
	augroup JumpCursorOnEdit
	   au!
	   autocmd BufReadPost *
	            \ if expand("<afile>:p:h") !=? $TEMP |
	            \   if line("'\"") > 1 && line("'\"") <= line("$") |
	            \     let JumpCursorOnEdit_foo = line("'\"") |
	            \     let b:doopenfold = 1 |
	            \     if (foldlevel(JumpCursorOnEdit_foo) > foldlevel(JumpCursorOnEdit_foo - 1)) |
	            \        let JumpCursorOnEdit_foo = JumpCursorOnEdit_foo - 1 |
	            \        let b:doopenfold = 2 |
	            \     endif |
	            \     exe JumpCursorOnEdit_foo |
	            \   endif |
	            \ endif
	   " Need to postpone using "zv" until after reading the modelines.
	   autocmd BufWinEnter *
	            \ if exists("b:doopenfold") |
	            \   exe "normal zv" |
	            \   if(b:doopenfold > 1) |
	            \       exe  "+".1 |
	            \   endif |
	            \   unlet b:doopenfold |
	            \ endif
	augroup END
	
	"}}}

# File marks:
'0  1  0  ~/.vimrc
'1  1  0  ~/BaseScope.java
'2  1  0  ~/.vimrc
'3  1  0  ~/Scope.java
'4  1  0  ~/test.in

# Jumplist (newest first):
-'  1  0  ~/.vimrc
-'  1  0  ~/BaseScope.java
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/BaseScope.java
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  290  8  ~/.vimrc
-'  1  0  ~/BaseScope.java
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/BaseScope.java
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/Scope.java
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in
-'  1  0  ~/test.in

# History of marks within files (newest to oldest):

> ~/.vimrc
	"	1	0
	.	1	0
	+	1	0
	+	1	0
	+	1	1
	+	1	0

> ~/BaseScope.java
	"	1	0

> ~/Scope.java
	"	1	0

> ~/test.in
	"	1	0
